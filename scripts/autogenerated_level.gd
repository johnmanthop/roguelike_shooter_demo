extends Node2D

const LEVEL_SIZE:		int = 6
const TILE_SIZE:		int = 16
var room_scene: 		PackedScene = preload("res://scenes/autogenerated_room.tscn")
var passage_scene: 		PackedScene = preload("res://scenes/autogenerated_passage.tscn")
var level:				Array
var active_scene:		int
var entry_points:		Array
var exit_points:		Array
var SCREEN_SIZE:		Vector2
var half_tile_offset: 	Vector2

func init_level():
	level.append(passage_scene.instantiate())
	level.back().set_player($player)
	
	for i in LEVEL_SIZE - 1:
		if randi_range(0, 1) == 0:
			level.append(passage_scene.instantiate())
			level.back().set_player($player)
		else:
			level.append(room_scene.instantiate())
			level.back().set_player($player)
	
	add_child(level[0])

func set_entry_exit_points():
	pass

func handle_scene_progress():
	var scene_changed = false
	var old_scene_index = active_scene
	var new_scene_index
	if level[active_scene].is_player_at_left_entry() and $player.get_animation() == "walk-left":
		if active_scene > 0:
			scene_changed = true
			active_scene -= 1
			new_scene_index = active_scene
	elif level[active_scene].is_player_at_right_entry() and $player.get_animation() == "walk-right":
		if active_scene < level.size() - 1:
			scene_changed = true
			active_scene += 1
			new_scene_index = active_scene
	
	if scene_changed:
		remove_child(level[old_scene_index])
		add_child(level[new_scene_index])
		var is_player_at_right_hemi = ($player.position.x > (SCREEN_SIZE.x / 2))
		$player.position = level[new_scene_index].get_starting_position(is_player_at_right_hemi) + half_tile_offset

func handle_hud():
	var health_blocks = int(($Hud.HEALTH_BLOCKS * $player.health) / $player.MAX_HEALTH)
	$Hud.set_visible_blocks(health_blocks)

func _process(delta):
	for l in level: l.hide()
	
	level[active_scene].show()
	level[active_scene].tick()
	
	handle_scene_progress()
	handle_hud()

func _ready():
	SCREEN_SIZE = get_viewport_rect().size
	half_tile_offset = Vector2(TILE_SIZE / 2, TILE_SIZE / 2)
	active_scene = 0
	init_level()
	set_entry_exit_points()
	$player.position = level[0].get_starting_position(true	 )
