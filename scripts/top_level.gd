extends Node2D

enum STATE
{
	FREE_ROAM,
	IN_ROOM
}

const TILE_SIZE: 		int = 16
var half_tile_offset: 	Vector2
var enemy_rooms:		Array
var player_state:		STATE
var active_scene

func construct_enemy_rooms():
	for i in $AutogeneratedLevel.NO_OF_ROOMS:
		var enemy_room = preload("res://scenes/autogenerated_room.tscn").instantiate()
		enemy_rooms.append(enemy_room)

func handle_player_transfer():
	if player_state == STATE.FREE_ROAM:
		var actived_enemy_room = $AutogeneratedLevel.get_active_enemy_room()
		if actived_enemy_room.x != -1:
			player_state = STATE.IN_ROOM
			remove_child($AutogeneratedLevel)
			add_child(enemy_rooms[0])
			$Player.position = enemy_rooms[0].get_starting_position()
			

func init_player():
	player_state = STATE.FREE_ROAM
	$Player.position = $AutogeneratedLevel.player_starting_point * TILE_SIZE + half_tile_offset
	$AutogeneratedLevel.set_player_pointer($Player)
	for room in enemy_rooms:
		room.set_player_pointer($Player)
		

func handle_HUD():
	var health_blocks: int = ($Hud.HEALTH_BLOCKS * $Player.health) / $Player.MAX_HEALTH
	$Hud.set_visible_blocks(health_blocks)

func _process(delta):
	handle_player_transfer()
	handle_HUD()
	
func _ready():
	active_scene = $AutogeneratedLevel
	half_tile_offset = Vector2(TILE_SIZE / 2, TILE_SIZE / 2)
	
	construct_enemy_rooms()
	init_player()

